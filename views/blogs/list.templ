package blogs

import "github.com/skiba-mateusz/blog-nest/types"
import "strconv"
import "fmt"

type ListData struct {
    Blogs       []types.Blog
    TotalPages  int
    TotalBlogs  int
    Page        int
}

func GenerateRange(start, end int) []int {
    if end < start {
        return []int{}
    }
    rangeSlice := make([]int, end-start+1)
    for i := range rangeSlice {
        rangeSlice[i] = start + i
    }
    return rangeSlice
}


templ paginationBtn(currentPage, page int) {
    <button onClick="document.getElementById('blogs').scrollIntoView()" class={"btn btn--primary", templ.KV("btn--secondary", page == currentPage)} 
            hx-get={ fmt.Sprintf("/blog/page/%d", page) } hx-target="#blogs" hx-swap="outerHTML">
        { strconv.Itoa(page) }
    </button>
}

templ List(data ListData) {
    if len(data.Blogs) > 0 {
        <div id="blogs" class="flow">
            <ul class="grid" style="--grid-spacer: var(--size-16)">
                for _, blog := range data.Blogs {
                    <li>
                        @Preview(blog, "column")
                    </li>
                }
            </ul>
            <hr/>
            <div class="flex-group" style="--flex-spacer: var(--size-8)">
                for _, i := range GenerateRange(1, data.TotalPages) {
                    @paginationBtn(data.Page, i)
                }
            </div>
        </div>
    }
}