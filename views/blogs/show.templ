package blogs

import "github.com/skiba-mateusz/blog-nest/types"
import "github.com/skiba-mateusz/blog-nest/views/layouts"
import "github.com/skiba-mateusz/blog-nest/views/components"
import "time"
import "fmt"
import "strconv"

type ShowData struct {
    Title   string
    Blog    *types.Blog
    User    *types.User
}

func formatDate(date time.Time) string {
    return date.Format("2006-01-02")
}

func method(likes *types.BlogLikes, blogID int) templ.Attributes {
    method := ""
    if likes.UserLiked {
        method = "hx-put"
    } else {
        method = "hx-post"
    }
    return templ.Attributes{method: fmt.Sprintf("/blog/%d/like", blogID) }
}


templ Reactions(likes *types.BlogLikes, blogID int) {
 <div id="reactions" class="reactions">
    <button 
        { method(likes, blogID)... }
        if likes.UserLikeValue == 0 || likes.UserLikeValue == -1 {
            hx-vals='{"value": 1}'
        } else {
            hx-vals='{"value": 0}'
        }
        hx-target="#reactions"
        hx-swap="outerHTML"
        class={"reactions__btn reactions__btn-like btn btn--rounded", templ.KV("reactions__btn-like--active", likes.UserLikeValue == 1)}
    >
        <box-icon name='like' type='solid'></box-icon>
        <span class="sr-only">Like</span>
    </button>
    <span class="reactions__count">{ strconv.Itoa(likes.Count) }</span>
    <button
        { method(likes, blogID)... }
        if likes.UserLikeValue == 0 || likes.UserLikeValue == 1 {
            hx-vals='{"value": -1}'
        } else {
            hx-vals='{"value": 0}'
        }
        hx-target="#reactions"
        hx-swap="outerHTML"
        class={"reactions__btn reactions__btn-dislike btn btn--rounded", templ.KV("reactions__btn-dislike--active", likes.UserLikeValue == -1)}
    >
        <box-icon name='dislike' type='solid'></box-icon>
        <span class="sr-only">Dislike</span>
    </button>
</div>
}


templ Show(data ShowData) {
    @layouts.Base(data.Title, data.User) {
        <article class="blog my-24">
            <div class="container container--large">
                @components.GoBack()
                <header class="blog__header">
                    <h1 class="blog__title">{ data.Blog.Title }</h1>
                    <figure class="blog__img-wrapper backdrop">
                        <img class="blog__img" src="/static/images/blog.jpg" alt={ data.Blog.Title }>
                    </figure>
                    <div class="blog__author panel flow">
                        <h2 class="heading text-20 text-semi-bold">About author</h2>
                        <span>{ data.Blog.User.Username }</span>
                    </div>
                </header>
                <hr class="my-16"/>
                <section class="container container--medium flow my-24">
                    @templ.Raw(data.Blog.Content)
                </section>
                <hr class="my-16"/>
                <footer class="blog__footer">
                    @Reactions(data.Blog.Likes, data.Blog.ID)
                    <time>{ formatDate( data.Blog.CreatedAt) }</time>
                </footer>
            </div>
        </article>
    }
}